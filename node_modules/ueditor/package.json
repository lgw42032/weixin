{
  "_from": "ueditor",
  "_id": "ueditor@1.2.3",
  "_inBundle": false,
  "_integrity": "sha1-HsihLT8VutOkAReGpzpIZJY2twQ=",
  "_location": "/ueditor",
  "_npmUser": {
    "email": "hellonewworld@vip.qq.com",
    "name": "netpi"
  },
  "_npmVersion": "1.4.14",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "ueditor",
    "fetchSpec": "latest",
    "name": "ueditor",
    "raw": "ueditor",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/ueditor/-/ueditor-1.2.3.tgz",
  "_shasum": "1ec8a12d3f15bad3a4011786a73a48649636b704",
  "_spec": "ueditor",
  "_where": "F:\\demo\\weixin",
  "author": {
    "name": "Night_elf"
  },
  "bugs": {
    "url": "https://github.com/netpi/ueditor/issues"
  },
  "bundleDependencies": false,
  "decription": "nodejs for ueditor",
  "dependencies": {
    "busboy": "^0.2.9",
    "fdfs": "^1.0.4",
    "fs-extra": "^0.11.0",
    "node-snowflake": "0.0.1",
    "qn": "^1.3.0"
  },
  "deprecated": false,
  "description": "",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "28993ad1dbde8b1d83452400b1c77398f18e630e",
    "tarball": "http://registry.npmjs.org/ueditor/-/ueditor-1.0.0.tgz"
  },
  "gitHead": "2538eb8e109572939df8b8a02623f53aaf4e0de4",
  "homepage": "https://github.com/netpi/ueditor",
  "main": "index.js",
  "maintainers": [
    {
      "email": "hellonewworld@vip.qq.com",
      "name": "netpi"
    }
  ],
  "name": "ueditor",
  "optionalDependencies": {},
  "readme": "# Node.js : ueditor\n\n\n[UEditor](https://github.com/fex-team/ueditor) 官方支持的版本有PHP JSP ASP .NET.\n\nueditor for nodejs 可以让你的UEditor支持nodejs\n\n## ueditor@1.0.0 已经全面升级 。\n\n##Installation\n\n```\n npm install ueditor --save\n\n```\n\n\n## Usage\n\n```javascript\n\n\nvar bodyParser = require('body-parser')\nvar ueditor = require(\"ueditor\")\napp.use(bodyParser.urlencoded({\n  extended: true\n}))\napp.use(bodyParser.json());\n\n// /ueditor 入口地址配置 https://github.com/netpi/ueditor/blob/master/example/public/ueditor/ueditor.config.js\n// 官方例子是这样的 serverUrl: URL + \"php/controller.php\"\n// 我们要把它改成 serverUrl: URL + 'ue'\napp.use(\"/ueditor/ue\", ueditor(path.join(__dirname, 'public'), function(req, res, next) {\n\n  // ueditor 客户发起上传图片请求\n\n  if(req.query.action === 'uploadimage'){\n\n    // 这里你可以获得上传图片的信息\n    var foo = req.ueditor;\n    console.log(foo.filename); // exp.png\n    console.log(foo.encoding); // 7bit\n    console.log(foo.mimetype); // image/png\n\n    // 下面填写你要把图片保存到的路径 （ 以 path.join(__dirname, 'public') 作为根路径）\n    var img_url = 'yourpath';\n    res.ue_up(img_url); //你只要输入要保存的地址 。保存操作交给ueditor来做\n  }\n  //  客户端发起图片列表请求\n  else if (req.query.action === 'listimage'){\n    var dir_url = 'your img_dir'; // 要展示给客户端的文件夹路径\n    res.ue_list(dir_url) // 客户端会列出 dir_url 目录下的所有图片\n  }\n  // 客户端发起其它请求\n  else {\n\n    res.setHeader('Content-Type', 'application/json');\n    // 这里填写 ueditor.config.json 这个文件的路径\n    res.redirect('/ueditor/ueditor.config.json')\n}}));\n\n```\n### 七牛上传\n```javascript\n\nvar bodyParser = require('body-parser')\nvar ueditor = require(\"ueditor\")\napp.use(bodyParser.urlencoded({\n  extended: true\n}))\napp.use(bodyParser.json());\n\n// 支持七牛上传，如有需要请配置好qn参数，如果没有qn参数则存储在本地\napp.use(\"/ueditor/ue\", ueditor(path.join(__dirname, 'public'), {\n    qn: {\n        accessKey: 'your access key',\n        secretKey: 'your secret key',\n        bucket: 'your bucket name',\n        origin: 'http://{bucket}.u.qiniudn.com'\n    }\n}, function(req, res, next) {\n  // ueditor 客户发起上传图片请求\n  var imgDir = '/img/ueditor/'\n  if(req.query.action === 'uploadimage'){\n    var foo = req.ueditor;\n\n    var imgname = req.ueditor.filename;\n\n    \n    res.ue_up(imgDir); //你只要输入要保存的地址 。保存操作交给ueditor来做\n  }\n  //  客户端发起图片列表请求\n  else if (req.query.action === 'listimage'){\n    \n    res.ue_list(imgDir);  // 客户端会列出 dir_url 目录下的所有图片\n  }\n  // 客户端发起其它请求\n  else {\n\n    res.setHeader('Content-Type', 'application/json');\n    res.redirect('/ueditor/ueditor.config.json')\n}}));\n\n```\n### FDFS上传\n```javascript\n\nvar bodyParser = require('body-parser')\nvar ueditor = require(\"ueditor\")\napp.use(bodyParser.urlencoded({\n  extended: true\n}))\napp.use(bodyParser.json());\n\n//FDFS config 参数配置\nvar ueditorConfig = {\n  fdfs: {\n    /* Require 必须 */\n    upload: {\n      host: '192.168.0.40', //fdfs 上传服务器 host\n      port: '22122'  // 上传服务器端口(一般默认22122)\n    },\n    download: {\n      host: '192.168.0.82' //fdfs 下载服务器host\n    },\n    /* Require 必须 */\n    /* 可缺省 */\n    defaultExt: 'jpg', //默认后缀为png\n    charset: 'utf8', //默认为utf8\n    timeout: 20 * 1000 //默认超时时间10s\n    /* 可缺省 */\n  }\n};\n\n// 支持FDFS上传，upload跟download字段必填\napp.use(\"/ueditor/ue\", ueditor(path.join(__dirname, 'public'),  ueditorConfig, function(req, res, next) {\n  // ueditor 客户发起上传图片请求\n  var imgDir = '/img/ueditor/'\n  if(req.query.action === 'uploadimage'){\n    var foo = req.ueditor;\n\n    var imgname = req.ueditor.filename;\n\n    \n    res.ue_up(imgDir); //你只要输入要保存的地址 。保存操作交给ueditor来做\n  }\n  //  客户端发起图片列表请求\n  else if (req.query.action === 'listimage'){\n    \n    res.ue_list(imgDir);  // 客户端会列出 dir_url 目录下的所有图片\n  }\n  // 客户端发起其它请求\n  else {\n\n    res.setHeader('Content-Type', 'application/json');\n    res.redirect('/ueditor/ueditor.config.json')\n}}));\n\n```\n\n### 多类型文件上传 （附件 视频 图片）\n```javascript\n\nvar bodyParser = require('body-parser')\nvar ueditor = require(\"ueditor\")\napp.use(bodyParser.urlencoded({\n  extended: true\n}))\napp.use(bodyParser.json());\n\napp.use(\"/ueditor/ue\", ueditor(path.join(__dirname, 'public'), function(req, res, next) {\n  var imgDir = '/img/ueditor/' //默认上传地址为图片\n  var ActionType = req.query.action;\n    if (ActionType === 'uploadimage' || ActionType === 'uploadfile' || ActionType === 'uploadvideo') {\n        var file_url = imgDir;//默认上传地址为图片\n        /*其他上传格式的地址*/\n        if (ActionType === 'uploadfile') {\n            file_url = '/file/ueditor/'; //附件保存地址\n        }\n        if (ActionType === 'uploadvideo') {\n            file_url = '/video/ueditor/'; //视频保存地址\n        }\n        res.ue_up(file_url); //你只要输入要保存的地址 。保存操作交给ueditor来做\n        res.setHeader('Content-Type', 'text/html');\n    }\n  //客户端发起图片列表请求\n  else if (ActionType === 'listimage'){\n    \n    res.ue_list(imgDir);  // 客户端会列出 dir_url 目录下的所有图片\n  }\n  // 客户端发起其它请求\n  else {\n    res.setHeader('Content-Type', 'application/json');\n    res.redirect('/ueditor/ueditor.config.json')\n}}));\n\n```\n\n### 上传配置\n```javascript\napp.use(\"/ueditor/ue\", static_url, config = {}, callback);\n```\n当config为空时，会默认把图片上传到 static_url + '/img/ueditor' 目录下。   \n比如例子“Usage”中图片会上传到项目的 public/img/ueditor 目录。  \n\n当配置了 config.qn 图片则只会上传到七牛服务器而不会上传到项目目录。    \n同时上传到七牛和项目目录，只需配置 config.local 即可\n```javascript\nconfig = {\n  qn: { ... },\n  local: true \n}\n```\n\n你可以来[ueditor:nodejs](http://blog.netpi.me/nodejs/ueditor-nodejs)给作者留言\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/netpi/ueditor.git"
  },
  "scripts": {},
  "version": "1.2.3"
}
